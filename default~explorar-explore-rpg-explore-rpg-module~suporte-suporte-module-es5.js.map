{"version":3,"sources":["./node_modules/primeng/fesm5/primeng-accordion.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqJ;AACpE;AAClC;AACmB;;AAElE,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,eAAe,SAAI,IAAI,SAAI;AAC3B,mCAAmC,oCAAoC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qCAAqC;AAC9E;AACA;AACA;AACA,+BAA+B,gCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qCAAqC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,SAAS,gCAAgC,OAAO,oDAAM,SAAS,gEAAU,cAAc,kBAAkB,EAAE,KAAK,GAAG;AACnH,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,4DAAM;AACd;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,qEAAe,CAAC,kDAAM;AAC9B;AACA;AACA,QAAQ,qEAAe,CAAC,yDAAa;AACrC;AACA;AACA,QAAQ,+DAAS;AACjB;AACA,gHAAgH,yDAAyD,seAAse,QAAQ,mQAAmQ,2BAA2B,sEAAsE,IAAI,0BAA0B,kDAAkD,yEAAyE,+DAA+D;AACntC;AACA,gBAAgB,mEAAO;AACvB,oBAAoB,iEAAK,WAAW,iEAAK;AACzC;AACA,qBAAqB;AACrB,oBAAoB,iEAAK,SAAS,iEAAK;AACvC,mCAAmC,QAAQ;AAC3C,qBAAqB,IAAI,UAAU,cAAc,EAAE;AACnD,oBAAoB,iEAAK,YAAY,iEAAK;AAC1C;AACA,qBAAqB;AACrB,oBAAoB,sEAAU,uBAAuB,mEAAO,IAAI,kBAAkB;AAClF,oBAAoB,sEAAU,mBAAmB,mEAAO,IAAI,kBAAkB;AAC9E,oBAAoB,sEAAU,oBAAoB,mEAAO,IAAI,kBAAkB;AAC/E;AACA;AACA,SAAS;AACT,mBAAmB,4DAAM,CAAC,gEAAU,cAAc,kBAAkB,EAAE;AACtE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,4DAAM;AACd;AACA;AACA,QAAQ,4DAAM;AACd;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,qEAAe;AACvB;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA,QAAQ,+DAAS;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,QAAQ,8DAAQ;AAChB,sBAAsB,4DAAY;AAClC,+CAA+C,wDAAY;AAC3D;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEoD;AACpD","file":"default~explorar-explore-rpg-explore-rpg-module~suporte-suporte-module-es5.js","sourcesContent":["import { EventEmitter, Inject, forwardRef, ChangeDetectorRef, Input, Output, ContentChildren, Component, ElementRef, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar idx = 0;\nvar AccordionTab = /** @class */ (function () {\n    function AccordionTab(accordion, changeDetector) {\n        this.changeDetector = changeDetector;\n        this.cache = true;\n        this.selectedChange = new EventEmitter();\n        this.transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n        this.id = \"ui-accordiontab-\" + idx++;\n        this.accordion = accordion;\n    }\n    Object.defineProperty(AccordionTab.prototype, \"animating\", {\n        get: function () {\n            return this._animating;\n        },\n        set: function (val) {\n            this._animating = val;\n            if (!this.changeDetector.destroyed) {\n                this.changeDetector.detectChanges();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AccordionTab.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.templates.forEach(function (item) {\n            switch (item.getType()) {\n                case 'content':\n                    _this.contentTemplate = item.template;\n                    break;\n                default:\n                    _this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    };\n    AccordionTab.prototype.toggle = function (event) {\n        if (this.disabled || this.animating) {\n            return false;\n        }\n        this.animating = true;\n        var index = this.findTabIndex();\n        if (this.selected) {\n            this.selected = false;\n            this.accordion.onClose.emit({ originalEvent: event, index: index });\n        }\n        else {\n            if (!this.accordion.multiple) {\n                for (var i = 0; i < this.accordion.tabs.length; i++) {\n                    this.accordion.tabs[i].selected = false;\n                    this.accordion.tabs[i].selectedChange.emit(false);\n                }\n            }\n            this.selected = true;\n            this.loaded = true;\n            this.accordion.onOpen.emit({ originalEvent: event, index: index });\n        }\n        this.selectedChange.emit(this.selected);\n        event.preventDefault();\n    };\n    AccordionTab.prototype.findTabIndex = function () {\n        var index = -1;\n        for (var i = 0; i < this.accordion.tabs.length; i++) {\n            if (this.accordion.tabs[i] == this) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    };\n    Object.defineProperty(AccordionTab.prototype, \"hasHeaderFacet\", {\n        get: function () {\n            return this.headerFacet && this.headerFacet.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AccordionTab.prototype.onToggleDone = function (event) {\n        this.animating = false;\n    };\n    AccordionTab.prototype.onKeydown = function (event) {\n        if (event.which === 32 || event.which === 13) {\n            this.toggle(event);\n            event.preventDefault();\n        }\n    };\n    AccordionTab.prototype.ngOnDestroy = function () {\n        this.accordion.tabs.splice(this.findTabIndex(), 1);\n    };\n    AccordionTab.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return Accordion; }),] }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    __decorate([\n        Input()\n    ], AccordionTab.prototype, \"header\", void 0);\n    __decorate([\n        Input()\n    ], AccordionTab.prototype, \"selected\", void 0);\n    __decorate([\n        Input()\n    ], AccordionTab.prototype, \"disabled\", void 0);\n    __decorate([\n        Input()\n    ], AccordionTab.prototype, \"cache\", void 0);\n    __decorate([\n        Output()\n    ], AccordionTab.prototype, \"selectedChange\", void 0);\n    __decorate([\n        Input()\n    ], AccordionTab.prototype, \"transitionOptions\", void 0);\n    __decorate([\n        ContentChildren(Header)\n    ], AccordionTab.prototype, \"headerFacet\", void 0);\n    __decorate([\n        ContentChildren(PrimeTemplate)\n    ], AccordionTab.prototype, \"templates\", void 0);\n    AccordionTab = __decorate([\n        Component({\n            selector: 'p-accordionTab',\n            template: \"\\n        <div class=\\\"ui-accordion-header ui-state-default ui-corner-all\\\" [ngClass]=\\\"{'ui-state-active': selected,'ui-state-disabled':disabled}\\\">\\n            <a [attr.tabindex]=\\\"disabled ? -1 : 0\\\" [attr.id]=\\\"id\\\" [attr.aria-controls]=\\\"id + '-content'\\\" role=\\\"tab\\\" [attr.aria-expanded]=\\\"selected\\\" (click)=\\\"toggle($event)\\\" \\n                (keydown)=\\\"onKeydown($event)\\\">\\n                <span class=\\\"ui-accordion-toggle-icon\\\" [ngClass]=\\\"selected ? accordion.collapseIcon : accordion.expandIcon\\\"></span>\\n                <span class=\\\"ui-accordion-header-text\\\" *ngIf=\\\"!hasHeaderFacet\\\">\\n                    {{header}}\\n                </span>\\n                <ng-content select=\\\"p-header\\\" *ngIf=\\\"hasHeaderFacet\\\"></ng-content>\\n            </a>\\n        </div>\\n        <div [attr.id]=\\\"id + '-content'\\\" class=\\\"ui-accordion-content-wrapper\\\" [@tabContent]=\\\"selected ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\\\" (@tabContent.done)=\\\"onToggleDone($event)\\\"\\n            [ngClass]=\\\"{'ui-accordion-content-wrapper-overflown': !selected||animating}\\\" \\n            role=\\\"region\\\" [attr.aria-hidden]=\\\"!selected\\\" [attr.aria-labelledby]=\\\"id\\\">\\n            <div class=\\\"ui-accordion-content ui-widget-content\\\">\\n                <ng-content></ng-content>\\n                <ng-container *ngIf=\\\"contentTemplate && (cache ? loaded : selected)\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n                </ng-container>\\n            </div>\\n        </div>\\n    \",\n            animations: [\n                trigger('tabContent', [\n                    state('hidden', style({\n                        height: '0'\n                    })),\n                    state('void', style({\n                        height: '{{height}}'\n                    }), { params: { height: '0' } }),\n                    state('visible', style({\n                        height: '*'\n                    })),\n                    transition('visible <=> hidden', animate('{{transitionParams}}')),\n                    transition('void => hidden', animate('{{transitionParams}}')),\n                    transition('void => visible', animate('{{transitionParams}}'))\n                ])\n            ]\n        }),\n        __param(0, Inject(forwardRef(function () { return Accordion; })))\n    ], AccordionTab);\n    return AccordionTab;\n}());\nvar Accordion = /** @class */ (function () {\n    function Accordion(el, changeDetector) {\n        this.el = el;\n        this.changeDetector = changeDetector;\n        this.onClose = new EventEmitter();\n        this.onOpen = new EventEmitter();\n        this.expandIcon = 'pi pi-fw pi-chevron-right';\n        this.collapseIcon = 'pi pi-fw pi-chevron-down';\n        this.tabs = [];\n    }\n    Accordion.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.initTabs();\n        this.tabListSubscription = this.tabList.changes.subscribe(function (_) {\n            _this.initTabs();\n            _this.changeDetector.markForCheck();\n        });\n    };\n    Accordion.prototype.initTabs = function () {\n        this.tabs = this.tabList.toArray();\n        this.updateSelectionState();\n    };\n    Accordion.prototype.getBlockableElement = function () {\n        return this.el.nativeElement.children[0];\n    };\n    Object.defineProperty(Accordion.prototype, \"activeIndex\", {\n        get: function () {\n            return this._activeIndex;\n        },\n        set: function (val) {\n            this._activeIndex = val;\n            this.updateSelectionState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Accordion.prototype.updateSelectionState = function () {\n        if (this.tabs && this.tabs.length && this._activeIndex != null) {\n            for (var i = 0; i < this.tabs.length; i++) {\n                var selected = this.multiple ? this._activeIndex.includes(i) : (i === this._activeIndex);\n                var changed = selected !== this.tabs[i].selected;\n                if (changed) {\n                    this.tabs[i].animating = true;\n                    this.tabs[i].selected = selected;\n                    this.tabs[i].selectedChange.emit(selected);\n                }\n            }\n        }\n    };\n    Accordion.prototype.ngOnDestroy = function () {\n        if (this.tabListSubscription) {\n            this.tabListSubscription.unsubscribe();\n        }\n    };\n    Accordion.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef }\n    ]; };\n    __decorate([\n        Input()\n    ], Accordion.prototype, \"multiple\", void 0);\n    __decorate([\n        Output()\n    ], Accordion.prototype, \"onClose\", void 0);\n    __decorate([\n        Output()\n    ], Accordion.prototype, \"onOpen\", void 0);\n    __decorate([\n        Input()\n    ], Accordion.prototype, \"style\", void 0);\n    __decorate([\n        Input()\n    ], Accordion.prototype, \"styleClass\", void 0);\n    __decorate([\n        Input()\n    ], Accordion.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Input()\n    ], Accordion.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        ContentChildren(AccordionTab)\n    ], Accordion.prototype, \"tabList\", void 0);\n    __decorate([\n        Input()\n    ], Accordion.prototype, \"activeIndex\", null);\n    Accordion = __decorate([\n        Component({\n            selector: 'p-accordion',\n            template: \"\\n        <div [ngClass]=\\\"'ui-accordion ui-widget ui-helper-reset'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" role=\\\"tablist\\\">\\n            <ng-content></ng-content>\\n        </div>\\n    \"\n        })\n    ], Accordion);\n    return Accordion;\n}());\nvar AccordionModule = /** @class */ (function () {\n    function AccordionModule() {\n    }\n    AccordionModule = __decorate([\n        NgModule({\n            imports: [CommonModule],\n            exports: [Accordion, AccordionTab, SharedModule],\n            declarations: [Accordion, AccordionTab]\n        })\n    ], AccordionModule);\n    return AccordionModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Accordion, AccordionModule, AccordionTab };\n//# sourceMappingURL=primeng-accordion.js.map\n"],"sourceRoot":""}